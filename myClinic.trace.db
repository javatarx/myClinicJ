06-15 02:47:27 jdbc[2]: exception
org.h2.jdbc.JdbcSQLException: Column "BNESPECIAL0_.COESPECIALIDAD" not found; SQL statement:
select bnespecial0_.coEspecialidad as coEspeci1_0_, bnespecial0_.DE_ESPECIALIDAD as DE_ESPEC2_0_, bnespecial0_.ST_ESPECIALIDAD as ST_ESPEC3_0_ from ESPECIALIDAD bnespecial0_ [42122-164]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:329)
	at org.h2.message.DbException.get(DbException.java:169)
	at org.h2.message.DbException.get(DbException.java:146)
	at org.h2.expression.ExpressionColumn.optimize(ExpressionColumn.java:138)
	at org.h2.expression.Alias.optimize(Alias.java:47)
	at org.h2.command.dml.Select.prepare(Select.java:799)
	at org.h2.command.Parser.prepareCommand(Parser.java:218)
	at org.h2.engine.Session.prepareLocal(Session.java:415)
	at org.h2.engine.Session.prepareCommand(Session.java:364)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1121)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:71)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:267)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$5.doPrepare(StatementPreparerImpl.java:146)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$StatementPreparationTemplate.prepareStatement(StatementPreparerImpl.java:172)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl.prepareQueryStatement(StatementPreparerImpl.java:148)
	at org.hibernate.loader.Loader.prepareQueryStatement(Loader.java:1984)
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:1914)
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:1892)
	at org.hibernate.loader.Loader.doQuery(Loader.java:937)
	at org.hibernate.loader.Loader.doQueryAndInitializeNonLazyCollections(Loader.java:340)
	at org.hibernate.loader.Loader.doList(Loader.java:2689)
	at org.hibernate.loader.Loader.doList(Loader.java:2672)
	at org.hibernate.loader.Loader.listIgnoreQueryCache(Loader.java:2506)
	at org.hibernate.loader.Loader.list(Loader.java:2501)
	at org.hibernate.loader.hql.QueryLoader.list(QueryLoader.java:504)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.list(QueryTranslatorImpl.java:395)
	at org.hibernate.engine.query.spi.HQLQueryPlan.performList(HQLQueryPlan.java:221)
	at org.hibernate.internal.SessionImpl.list(SessionImpl.java:1508)
	at org.hibernate.query.internal.AbstractProducedQuery.doList(AbstractProducedQuery.java:1538)
	at org.hibernate.query.internal.AbstractProducedQuery.list(AbstractProducedQuery.java:1506)
	at org.joedayz.acweb.dao.impl.HbmEspecialidadDaoImpl.getEspecialidades(HbmEspecialidadDaoImpl.java:41)
	at org.joedayz.acweb.test.EspecialidadDAOTest.getListaEspecialidades(EspecialidadDAOTest.java:21)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:76)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:193)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:52)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:191)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:42)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:184)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:236)
	at org.apache.maven.surefire.junit4.JUnit4TestSet.execute(JUnit4TestSet.java:53)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:123)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:104)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:164)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:110)
	at org.apache.maven.surefire.booter.SurefireStarter.invokeProvider(SurefireStarter.java:175)
	at org.apache.maven.surefire.booter.SurefireStarter.runSuitesInProcessWhenForked(SurefireStarter.java:107)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:68)
06-15 03:38:25 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "SELECT BNESPECIAL0_.CO_ESPECIALIDAD AS CO_ESPEC1_0_0_, BNMEDICO1_.CO_MEDICO AS CO_MEDIC1_1_1_, BNESPECIAL0_.DE_ESPECIALIDAD AS DE_ESPEC2_0_0_, BNESPECIAL0_.ST_ESPECIALIDAD AS ST_ESPEC3_0_0_, BNMEDICO1_.DE_MEDICO AS DE_MEDIC2_1_1_, BNMEDICO1_.CO_ESPECIALIDAD AS CO_ESPEC4_1_1_, BNMEDICO1_.ST_MEDICO AS ST_MEDIC3_1_1_ FROM ESPECIALIDAD BNESPECIAL0_ INNER JOIN MEDICO BNMEDICO1_ ON WHERE[*] BNMEDICO1_.CO_MEDICO=2 "; expected "NOT, EXISTS, SELECT, FROM"; SQL statement:
select bnespecial0_.CO_ESPECIALIDAD as CO_ESPEC1_0_0_, bnmedico1_.CO_MEDICO as CO_MEDIC1_1_1_, bnespecial0_.DE_ESPECIALIDAD as DE_ESPEC2_0_0_, bnespecial0_.ST_ESPECIALIDAD as ST_ESPEC3_0_0_, bnmedico1_.DE_MEDICO as DE_MEDIC2_1_1_, bnmedico1_.CO_ESPECIALIDAD as CO_ESPEC4_1_1_, bnmedico1_.ST_MEDICO as ST_MEDIC3_1_1_ from ESPECIALIDAD bnespecial0_ inner join MEDICO bnmedico1_ on where bnmedico1_.CO_MEDICO=2 [42001-164]
06-15 03:38:55 jdbc[2]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "SELECT BNESPECIAL0_.CO_ESPECIALIDAD AS CO_ESPEC1_0_, BNESPECIAL0_.DE_ESPECIALIDAD AS DE_ESPEC2_0_, BNESPECIAL0_.ST_ESPECIALIDAD AS ST_ESPEC3_0_ FROM ESPECIALIDAD BNESPECIAL0_ INNER JOIN MEDICO BNMEDICO1_ ON WHERE[*] BNMEDICO1_.CO_MEDICO=2 "; expected "NOT, EXISTS, SELECT, FROM"; SQL statement:
select bnespecial0_.CO_ESPECIALIDAD as CO_ESPEC1_0_, bnespecial0_.DE_ESPECIALIDAD as DE_ESPEC2_0_, bnespecial0_.ST_ESPECIALIDAD as ST_ESPEC3_0_ from ESPECIALIDAD bnespecial0_ inner join MEDICO bnmedico1_ on where bnmedico1_.CO_MEDICO=2 [42001-164]
06-15 03:40:08 jdbc[2]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "SELECT BNESPECIAL0_.CO_ESPECIALIDAD AS CO_ESPEC1_0_, BNESPECIAL0_.DE_ESPECIALIDAD AS DE_ESPEC2_0_, BNESPECIAL0_.ST_ESPECIALIDAD AS ST_ESPEC3_0_ FROM ESPECIALIDAD BNESPECIAL0_ INNER JOIN MEDICO BNMEDICO1_ ON WHERE[*] BNMEDICO1_.CO_MEDICO=2 "; expected "NOT, EXISTS, SELECT, FROM"; SQL statement:
select bnespecial0_.CO_ESPECIALIDAD as CO_ESPEC1_0_, bnespecial0_.DE_ESPECIALIDAD as DE_ESPEC2_0_, bnespecial0_.ST_ESPECIALIDAD as ST_ESPEC3_0_ from ESPECIALIDAD bnespecial0_ inner join MEDICO bnmedico1_ on where bnmedico1_.CO_MEDICO=2 [42001-164]
06-15 03:40:36 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "SELECT BNESPECIAL0_.CO_ESPECIALIDAD AS CO_ESPEC1_0_, BNESPECIAL0_.DE_ESPECIALIDAD AS DE_ESPEC2_0_, BNESPECIAL0_.ST_ESPECIALIDAD AS ST_ESPEC3_0_ FROM ESPECIALIDAD BNESPECIAL0_ INNER JOIN MEDICO BNMEDICO1_ ON WHERE[*] BNMEDICO1_.CO_MEDICO=2 "; expected "NOT, EXISTS, SELECT, FROM"; SQL statement:
select bnespecial0_.CO_ESPECIALIDAD as CO_ESPEC1_0_, bnespecial0_.DE_ESPECIALIDAD as DE_ESPEC2_0_, bnespecial0_.ST_ESPECIALIDAD as ST_ESPEC3_0_ from ESPECIALIDAD bnespecial0_ inner join MEDICO bnmedico1_ on where bnmedico1_.CO_MEDICO=2 [42001-164]
